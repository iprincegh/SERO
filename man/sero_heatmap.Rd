% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hotspots.R
\name{sero_heatmap}
\alias{sero_heatmap}
\title{Create accident heatmap based on number of accidents}
\usage{
sero_heatmap(
  accidents,
  risk_categories = c(1, 2),
  bandwidth = 1000,
  grid_size = 100,
  data = NULL,
  show_munster = TRUE,
  show_landuse = FALSE,
  show_accidents = TRUE,
  color_scheme = "viridis"
)
}
\arguments{
\item{accidents}{sf object with accident data (must have UKATEGORIE column)}

\item{risk_categories}{High-risk accident categories (default=c(1,2): 1=fatal, 2=serious)}

\item{bandwidth}{Kernel bandwidth for density estimation in meters (default=1000)}

\item{grid_size}{Resolution of the heatmap grid in meters (default=100)}

\item{data}{Original data for context (optional)}

\item{show_munster}{Logical, whether to show Münster city boundaries (default=TRUE)}

\item{show_landuse}{Logical, whether to show land use overlay (default=FALSE)}

\item{show_accidents}{Logical, whether to show individual accident points (default=TRUE)}

\item{color_scheme}{Color scheme for heatmap: "viridis", "plasma", "inferno", "magma" (default="viridis")}
}
\value{
ggplot2 object
}
\description{
Creates a continuous heatmap showing accident density across Münster.
Uses kernel density estimation to create smooth density surfaces.
}
\examples{
\dontrun{
data <- sero_load_data()
heatmap_plot <- sero_heatmap(data$accident)

# With custom parameters
heatmap_plot <- sero_heatmap(data$accident, 
                            bandwidth = 800, 
                            grid_size = 50,
                            color_scheme = "plasma")
}
}
